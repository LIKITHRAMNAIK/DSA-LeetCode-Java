class Solution {
    public int rob(int[] nums) {
        int n = nums.length;
        if(n == 0) return 0;
        if(n == 1) return nums[0];
        
        int case1 = robin(nums,0,n-2);
        int case2 = robin(nums,1,n-1);

        return Math.max(case1, case2);
    }
    public static int robin(int nums[], int start, int end){
        if(start == end) return nums[start];
        int dp[] = new int[end-start+1];
        dp[0] = nums[start];
        dp[1] = Math.max(nums[start], nums[start+1]);

        for(int i=2;i<dp.length;i++){
            dp[i] = Math.max(dp[i-1], nums[start+i]+dp[i-2]);
        }
        return dp[dp.length-1];
    }
}